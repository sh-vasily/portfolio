{"version":3,"sources":["Domain/Projects.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Projects","Toast","Header","closeButton","className","this","props","name","Body","description","Button","variant","size","disabled","applicationUrl","length","href","sourceCodeUrl","Component","App","Container","Row","Col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6PA8CeA,E,uKAhCP,OACI,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAMC,OAAP,CACEC,aAAa,EADf,SAEE,wBAAQC,UAAU,UAAlB,SAA6BC,KAAKC,MAAMC,SAE1C,cAACN,EAAA,EAAMO,KAAP,UAAaH,KAAKC,MAAMG,cACxB,qBAAKL,UAAU,YAAf,SACE,qBAAKA,UAAU,oDAAf,SACI,sBAAKA,UAAU,YAAf,UACI,cAACM,EAAA,EAAD,CACIC,QAAQ,kBACRC,KAAK,KACLC,SAA+C,IAArCR,KAAKC,MAAMQ,eAAeC,OACpCC,KAAMX,KAAKC,MAAMQ,eAJrB,6BAOA,cAACJ,EAAA,EAAD,CACIC,QAAQ,kBACRE,SAA+C,IAArCR,KAAKC,MAAMQ,eAAeC,OACpCC,KAAMX,KAAKC,MAAMW,cACjBL,KAAK,KAJT,uC,GApBDM,a,6BC4BRC,MAhCf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAACgB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CACIf,KAAK,yBACLE,YAAY,+GACZK,eAAe,sCACfG,cAAc,iGAEpB,cAACK,EAAA,EAAD,UACE,cAAC,EAAD,CACIf,KAAK,mBACLE,YAAY,iEACZK,eAAe,GACfG,cAAc,OAEpB,cAACK,EAAA,EAAD,UACE,cAAC,EAAD,CACIf,KAAK,aACLE,YAAY,kGACZK,eAAe,GACfG,cAAc,eCjBfM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCDdQ,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDZ,M","file":"static/js/main.c2dc8607.chunk.js","sourcesContent":["import React, { Component, Props, ReactNode } from 'react';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\ntype ProjectProps = {\r\n    name: string,\r\n    description: string,\r\n    applicationUrl: string,\r\n    sourceCodeUrl: string\r\n}\r\n\r\nclass Projects extends Component<ProjectProps, {}>{\r\n\r\n    render(): ReactNode {\r\n        return ( \r\n            <Toast>\r\n              <Toast.Header\r\n                closeButton={false}>\r\n                <strong className=\"mr-auto\">{this.props.name}</strong>\r\n              </Toast.Header>\r\n              <Toast.Body>{this.props.description}</Toast.Body>\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <div className=\"btn-group\">\r\n                        <Button \r\n                            variant=\"outline-primary\"\r\n                            size=\"lg\"\r\n                            disabled={this.props.applicationUrl.length === 0}\r\n                            href={this.props.applicationUrl}>\r\n                                Working version\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"outline-primary\"\r\n                            disabled={this.props.applicationUrl.length === 0}\r\n                            href={this.props.sourceCodeUrl}\r\n                            size=\"lg\">\r\n                                Source code\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </Toast>\r\n         );\r\n    }\r\n}\r\n\r\nexport default Projects;","import Projects from './Domain/Projects';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container >\n        <Row>\n          <Col>\n            <Projects \n                name=\"Recommendations system\" \n                description=\"Recommendations system, that predict book rating by user id. Developed on django fraemwork, using bootstrap.\"\n                applicationUrl=\"http://shvasily.pythonanywhere.com/\"\n                sourceCodeUrl=\"https://github.com/dep-810b-studs/recommendation-systems/tree/master/books_recommendations\"/>\n          </Col>\n          <Col>\n            <Projects \n                name=\"AirBnB prototype\" \n                description=\"AirBnB clone developed on kotlin, spring, using mongo, elastic\"\n                applicationUrl=\"\"\n                sourceCodeUrl=\"\"/>\n          </Col>\n          <Col>\n            <Projects \n                name=\"Simple CRM\" \n                description=\"Simple CRM for imaginary company developed on dotnet core, wpf, blazor using mssql and ef corec\"\n                applicationUrl=\"\"\n                sourceCodeUrl=\"\"/>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}